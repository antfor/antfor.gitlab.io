image: node:alpine
 
cache:
  paths:
    - ./front/rcc/node_modules/
    - ./front/website/node_modules/
 
before_script:
  #Website
  - cd ./front/website    
  - rm -rf dist    
  - CI=false npm install
  - cd ../..

  #RCC
  - cd ./front/rcc    # enter the React app directory
  - rm -rf build     # remove the existing build
  - CI=false npm install     # install required packages
  - cd ../..

  #Compress
  - apk add --no-cache brotli
  - apk add --no-cache zstd
 
pages:
  stage: deploy
  environment: Production
  script:
    #Website
    - cd ./front/website  
    - CI=false npm run build
    - ls
    - cd ../..
    - mkdir ./public
    - mv ./front/website/dist/* ./public  
    #RCC
    - cd ./front/rcc
    - CI=false npm run build     # build the React app, set CI=false because CI=true treats all warnings as errors
    - ls
    - cd ../..
    - ls
    - mkdir -p ./public/projects/rcc
    - mv ./front/rcc/build/* ./public/projects/rcc   # move build contents to new /public directory
    #Compress
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|xml\|json\|mjs\|svg\|yaml\|yml\|toml\|css\)$' -exec gzip -f -k -v -9 {} \;
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|xml\|json\|mjs\|svg\|yaml\|yml\|toml\|css\)$' -exec brotli -f -k -Z {} \;
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|xml\|json\|mjs\|svg\|yaml\|yml\|toml\|css\)$' -exec zstd -f -k --ultra -22 {} \;
    - export
  artifacts:
    paths:
    - public
  only:
  - master
